1. a and c.

2. e, f, and i.

3.
void avg_sum(double a[], int n, double *avg, double *sum)
{
    int i;

    for(i = 0; i < n; i++)
        *sum += a[i];
    *avg = sum / n;
}

4.
void swap(int *p, int *q);
void swap(int *p, int *q){

    int temp;

    temp = *p;
    *p = *q;
    *q = temp;

}

5.
void split_time(long total_sec, int *hr, int *min, int *sec){

    *hr = total_sec / 60 / 60;
    total_sec -= *hr * 3600;
    *min = total_sec / 60;
    total_sec -= *min * 60;
    *sec = total_sec
}

6.
void find_two_largest(int a[], int n, int *largest, int *second_largest)
{
    int i;

    if (a[0] > a[1]) {
        *largest = a[0];
        *second_largest = a[1];
    } else {
        *largest = a[1];
        *second_largest = a[0];
    }

    for (i = 2; i < n; i++)
        if (*largest < a[i]) {
            *second_largest = *largest;
            *largest = a[i];
        } 
        else if (*second_largest < a[i])
            *second_largest = a[i];
}

7. TODO.

8.
int *find_largest(int [a], int n){

    int *largest = &a[0];
    for(int i = 1; i < n; i){
        if(*largest < a[i])
            largest = &a[i];
    }
    return largest;
}