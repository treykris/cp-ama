1. 1 2 4 8 16 32 64 128

2. 9384 938 93 9 

3. 5 4 2 1

4. c is not equivalent. It increments i on the conditional check.

5. c is not equivalent. The loop is executed and would increment the accumulator before condition is checked.

6. for(int i = 0; i <= 128; i *= 2)
       printf("%d ", i);

7. for(int i = 9384; i > 0; i /= 10)
       printf("%d ", i);

8. 10 5 3 2 1 1 .... 1
    Once i = 1 it hits an inifite loop that keeps
    printing 1 because 2 / 2 resolves to 1.

9. int i = 10;
    while (i >= 1)
    {
        printf("%d ", i++);
        i /= 2;
    }

10. for(i = 10; i > 0; i--){
        if(i == 3)
            continue;
    }

    for(i = 10; i > 0; i--){
        if(i == 3)
            goto end;

        end :;
    }

11. 20

12. for(d = 2; d * d <= n; d++)
    if (d * d <= n)
        printf("%d is divisible by %d\n", n, d);
    else
        printf("%d is prime\n", n);

13. for(n = 0; m > 0; n++, m /= 2);

14. if (n % 2 == 0)
        printf("n is even\n"); 
    -- Remove the semicolon